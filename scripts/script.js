async function fetchGitHubInfo() {
	const username = "int-ma1n";
	const url = `https://api.github.com/users/${username}`;

	try {
		const response = await fetch(url);
		if (!response.ok) {
			alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö!");
			return;
		}

		const data = await response.json();

		document.getElementById("avatar-display").src = data.avatar_url;
		document.getElementById("name-display").textContent =
			data.name || data.login;
		document.getElementById("bio-display").textContent =
			data.bio || "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
		document.getElementById("repo-display").textContent = data.public_repos;
		document.getElementById("follows-display").textContent = data.followers;
		document.getElementById("profile-gh-link").href = data.html_url;
		document.getElementById("profile-gh-link-image").href = data.html_url;
	} catch (error) {
		console.error(error);
		document.getElementById("github-info").innerHTML =
			"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API.";
	}
}
fetchGitHubInfo();

const blob = document.getElementById("blob");

document.body.onpointermove = (event) => {
	const { clientX, clientY } = event;

	blob.animate(
		{
			left: `${clientX}px`,
			top: `${clientY}px`,
		},
		{ duration: 1000, fill: "forwards" }
	);
};

async function loadRandomPost() {
	try {
		const response = await fetch("assets/posts.json");
		if (!response.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å posts.json");

		const posts = await response.json();
		const randomIndex = Math.floor(Math.random() * posts.length);
		const randomPost = posts[randomIndex];

		const postsDiv = document.querySelector(".posts");
		if (postsDiv) {
			postsDiv.innerHTML = `
          <h2>–ü–æ—Å—Ç</h2>
          <p>${randomPost}</p>
        `;
		}
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤:", error);
	}
}

document.addEventListener("DOMContentLoaded", loadRandomPost);

const langBtn = document.getElementById("language-btn");
const langOptions = document.getElementById("language-options");

langBtn.addEventListener("click", () => {
	langOptions.classList.toggle("active");
});

function setLang(lang) {
	localStorage.setItem("lang", lang);

	if (lang === "ua") {
		window.location.href = "../index.html"; // –æ—Å–Ω–æ–≤–Ω–æ–π ‚Äî –≤ –∫–æ—Ä–Ω–µ
	} else {
		window.location.href = `/${lang}/index.html`;
	}
}

const skills = [
	"–°–ª—É—á–∞–π–Ω–æ–µ —á–µ—Å–∞–Ω–∏–µ —É—Ö–∞ —á–µ—Ä–µ–∑ –∫–∞–ø—é—à–æ–Ω",
	"–£–º–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—å 15 –≤–∫–ª–∞–¥–æ–∫ –∏ —Å–Ω–æ–≤–∞ –∏—Ö –æ—Ç–∫—Ä—ã—Ç—å",
	"–°–≤–µ—Ä—Ö–∑–≤—É–∫–æ–≤–æ–µ –ø—Ä–æ–º–∞—Ç—ã–≤–∞–Ω–∏–µ TikTok",
	"–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å–º—ã—Å–ª–∞ –º–µ–º–æ–≤ –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
	"–¢–µ–ª–µ–ø–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—â—É—â–µ–Ω–∏–µ Wi-Fi —Å–ª–∞–±–æ—Å—Ç–∏",
	"–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫–ª–∏–∫–∞—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É' —Å –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞",
	"–ó–∞–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∑–∞ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—É –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞—à—ë–ª —É—á–∏—Ç–µ–ª—å",
	"–£–ª—å—Ç—Ä–∞-–∏–Ω—Å—Ç–∏–Ω–∫—Ç –∏–∑–±–µ–≥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á —Å —Å–æ—Å–µ–¥—è–º–∏ –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–µ",
	"–ù–µ–≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –≤ Zoom",
	"–ß—Ç–µ–Ω–∏–µ —á–∞—Ç–∞ –≤–æ —Å–Ω–µ",
];

const levels = ["–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π", "–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π", "–†–µ–¥–∫–∏–π"];

document.getElementById("guitar-word").addEventListener("click", () => {
	const randomSkill = skills[Math.floor(Math.random() * skills.length)];
	const randomLevel = levels[Math.floor(Math.random() * levels.length)];
	document.getElementById(
		"skill-text"
	).textContent = `–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–∫–∏–ª–ª ${randomSkill} üß† –£—Ä–æ–≤–µ–Ω—å: ${randomLevel}`;

	document.getElementById("skill-modal").classList.remove("hidden");
});

document.getElementById("close-modal").addEventListener("click", () => {
	document.getElementById("skill-modal").classList.add("hidden");
});
