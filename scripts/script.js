async function fetchGitHubInfo() {
	const username = "int-ma1n";
	const url = `https://api.github.com/users/${username}`;

	try {
		const response = await fetch(url);
		if (!response.ok) {
			alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö!");
			return;
		}

		const data = await response.json();

		document.getElementById("avatar-display").src = data.avatar_url;
		document.getElementById("name-display").textContent =
			data.name || data.login;
		document.getElementById("bio-display").textContent =
			data.bio || "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
		document.getElementById("repo-display").textContent = data.public_repos;
		document.getElementById("follows-display").textContent = data.followers;
		document.getElementById("profile-gh-link").href = data.html_url;
		document.getElementById("profile-gh-link-image").href = data.html_url;
	} catch (error) {
		console.error(error);
		document.getElementById("github-info").innerHTML =
			"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API.";
	}
}
fetchGitHubInfo();

const blob = document.getElementById("blob");

document.body.onpointermove = (event) => {
	const { clientX, clientY } = event;

	blob.animate(
		{
			left: `${clientX}px`,
			top: `${clientY}px`,
		},
		{ duration: 1000, fill: "forwards" }
	);
};

async function loadRandomPost() {
	try {
		const response = await fetch("assets/posts.json");
		if (!response.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å posts.json");

		const posts = await response.json();
		const randomIndex = Math.floor(Math.random() * posts.length);
		const randomPost = posts[randomIndex];

		const postsDiv = document.querySelector(".posts");
		if (postsDiv) {
			postsDiv.innerHTML = `
          <h2>–ü–æ—Å—Ç</h2>
          <p>${randomPost}</p>
        `;
		}
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤:", error);
	}
}

document.addEventListener("DOMContentLoaded", loadRandomPost);

const langBtn = document.getElementById("language-btn");
const langOptions = document.getElementById("language-options");

langBtn.addEventListener("click", () => {
	langOptions.classList.toggle("active");
});

function setLang(lang) {
	localStorage.setItem("lang", lang);

	if (lang === "ua") {
		window.location.href = "../index.html"; // –æ—Å–Ω–æ–≤–Ω–æ–π ‚Äî –≤ –∫–æ—Ä–Ω–µ
	} else {
		window.location.href = `/${lang}/index.html`;
	}
}

const skills = [
	"–°–ª—É—á–∞–π–Ω–æ–µ —á–µ—Å–∞–Ω–∏–µ —É—Ö–∞ —á–µ—Ä–µ–∑ –∫–∞–ø—é—à–æ–Ω",
	"–£–º–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—å 15 –≤–∫–ª–∞–¥–æ–∫ –∏ —Å–Ω–æ–≤–∞ –∏—Ö –æ—Ç–∫—Ä—ã—Ç—å",
	"–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å–º—ã—Å–ª–∞ –º–µ–º–æ–≤ –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
	"–¢–µ–ª–µ–ø–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—â—É—â–µ–Ω–∏–µ Wi-Fi —Å–ª–∞–±–æ—Å—Ç–∏",
	"–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫–ª–∏–∫–∞—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É' —Å –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞",
	"–ó–∞–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∑–∞ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—É –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞—à—ë–ª —É—á–∏—Ç–µ–ª—å",
	"–ò–Ω—Å—Ç–∏–Ω–∫—Ç –∏–∑–±–µ–≥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á —Å —Å–æ—Å–µ–¥—è–º–∏ –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–µ",
	"–ù–µ–≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –≤ Zoom",
	"–ß—Ç–µ–Ω–∏–µ —á–∞—Ç–∞ –≤–æ —Å–Ω–µ",
	"–ú–∞—Å—Ç–µ—Ä –≤ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –∑–∞ –¥–æ–ª—é —Å–µ–∫—É–Ω–¥—ã",
	"–ò–Ω—Å—Ç–∏–Ω–∫—Ç –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å—Ä–µ–¥–∏ 50 –≤–∫–ª–∞–¥–æ–∫",
	"–¢–µ–ª–µ–ø–∞—Ç–∏—è –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è, –∫–æ–≥–¥–∞ —É—á–∏—Ç–µ–ª—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç –Ω–∞ —Å–ª–∞–π–¥ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏",
	"–ù–µ—É–ª–æ–≤–∏–º–æ—Å—Ç—å: –∏—Å—á–µ–∑–∞–Ω–∏–µ —Å –≤–∏–¥–µ–æ-–∑–≤–æ–Ω–∫–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç",
	"–ì—É—Ä—É –∏–≥—Ä—ã –≤ —à–∞—Ö–º–∞—Ç—ã —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–∏—á—å–∏—Ö",
	"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–µ–º–æ–≤: —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–µ–º–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–π–º—É—Ç –≤—Å–µ, –≤–∫–ª—é—á–∞—è –±–∞–±—É—à–µ–∫",
	"–ò–Ω—Å—Ç–∏–Ω–∫—Ç–∏–≤–Ω–æ–µ –∏–∑–±–µ–≥–∞–Ω–∏–µ —Å–∫–æ–ª—å–∑–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–µ",
	"–ó–Ω–∞—Ç–æ–∫ —Å–∫—Ä—ã—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ: –Ω–∞—É—á–∏–ª—Å—è –≤—Å–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏",
	"–ú–∞–≥–∏—Å—Ç—Ä –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ Instagram, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–º",
	"–°–≤–µ—Ä—Ö—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞–∂–∞—Ç—å '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É' –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∞ –Ω–∞—á–Ω–µ—Ç—Å—è",
	"–ß–∏—Ç–∞—é—â–∏–π –º–µ–º—ã –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –∏—Ö —É—Å–ø–µ–≤–∞—é—Ç –¥–µ–ª–∞—Ç—å",
	"–ú–∞—Å—Ç–µ—Ä –ø–æ –ø–æ–∏—Å–∫—É –ø–æ–ª–æ–º–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏ –∏—Ö —Ñ–∏–∫—Å–∞—Ü–∏–∏",
	"–¢–æ—Ç, –∫—Ç–æ –≤—Å–µ–≥–¥–∞ –≤–∫—É—Ä–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–π —Ç—Ä–µ–Ω–¥ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–º",
	"–ù–µ–≤–∏–¥–∏–º–∞—è —Ä—É–∫–∞: –∑–∞–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–æ–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∑–∞ —Å–µ–∫—É–Ω–¥—É –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–π–¥–µ—Ç –±–æ—Å—Å",
	"–ú–∞–≥–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å–∞–º—ã–π –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç",
	"–ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –¥–æ–º–∞—à–∫–∏ –ø–æ –ø–∞–º—è—Ç–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç",
	"–ß–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ —Å–∏–¥–∏—Ç –≤ '–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å' —Ä–µ–∂–∏–º–µ, –∫–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–µ –≤–æ–≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏–µ",
	"–ì—É—Ä—É –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ 3 –∫–ª–∏–∫–∞",
	"–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –∑–∞–±—ã–ª, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ —É–≥–∞–¥–∞–ª",
];

const levels = ["–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π", "–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π", "–†–µ–¥–∫–∏–π"];

document.getElementById("guitar-word").addEventListener("click", () => {
	const randomSkill = skills[Math.floor(Math.random() * skills.length)];
	const randomLevel = levels[Math.floor(Math.random() * levels.length)];
	document.getElementById(
		"skill-text"
	).textContent = `–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–∫–∏–ª–ª: ${randomSkill} üß† –£—Ä–æ–≤–µ–Ω—å: ${randomLevel}`;

	document.getElementById("skill-modal").classList.remove("hidden");
});

document.getElementById("close-modal").addEventListener("click", () => {
	document.getElementById("skill-modal").classList.add("hidden");
});
